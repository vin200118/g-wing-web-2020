{"version":3,"sources":["Sider.jsx","menu/Registration.jsx","AlertCom.jsx","menu/Login.jsx","Main.js","App.js","serviceWorker.js","index.js"],"names":["Sider","props","logoutfun","bind","openLeftMenu","this","setState","document","getElementById","style","display","window","localStorage","setItem","className","id","onClick","closeLeftMenu","href","React","Component","Registration","class","type","for","Login","Main","path","component","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c669179.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Sider extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.logoutfun=this.logoutfun.bind(this);\r\n        this.openLeftMenu = this.openLeftMenu.bind(this);\r\n    }\r\n    openLeftMenu() {\r\n        this.setState({\"dummy\":\"empty\"})\r\n        document.getElementById(\"leftMenu\").style.display = \"block\";\r\n       // window.location.href =\"#\";\r\n    }\r\n\r\n     closeLeftMenu() {\r\n        document.getElementById(\"leftMenu\").style.display = \"none\";\r\n    }\r\n    logoutfun(){\r\n        document.getElementById(\"leftMenu\").style.display = \"none\";\r\n        this.setState({\"dummy\":\"empty\"})\r\n        window.localStorage.setItem(\"password\",\"\");\r\n        //window.location.href =\"#\";\r\n\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"w3-sidebar w3-bar-block w3-card w3-animate-left\" style={{display:\"none\"}} id=\"leftMenu\">\r\n                    <button id=\"closeButton\" onClick={this.closeLeftMenu} className=\"w3-bar-item w3-button w3-small\">Close &times;</button>\r\n                        <div>\r\n                            <a onClick={this.closeLeftMenu} href=\"#/registration\" className=\"w3-bar-item w3-button\">Registration</a>\r\n                              <a onClick={this.closeLeftMenu} href=\"#/login\" className=\"w3-bar-item w3-button\">Login</a>\r\n                        </div>\r\n                        </div>\r\n                    <div className=\"w3-teal\">\r\n                        <button className=\"w3-button w3-teal w3-xlarge w3-left\"\r\n                                onClick={this.openLeftMenu}>&#9776;</button>\r\n                              <span className=\"headerTitle\">G Wing</span>\r\n\r\n                    </div>\r\n\r\n\r\n            </div>\r\n\r\n    )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport AlertCom from \"../AlertCom\";\r\nimport Spinner from 'react-spinkit';\r\nimport { Redirect } from 'react-router-dom';\r\nexport default class Registration extends React.Component{\r\n\r\n  render(){\r\n    return (\r\n      <form class=\"col s12\">\r\n     <div class=\"row\">\r\n       <div class=\"input-field col s6\">\r\n         <input id=\"username\" type=\"text\" class=\"validate\"/>\r\n         <label for=\"username\">Username</label>\r\n       </div>\r\n     </div>\r\n     <div class=\"row\">\r\n       <div class=\"input-field col s6\">\r\n         <input id=\"new_password\" type=\"password\" class=\"validate\"/>\r\n           <label for=\"password\">New Password</label>\r\n       </div>\r\n     </div>\r\n     <div class=\"row\">\r\n       <div class=\"input-field col s6\">\r\n         <input id=\"confirm_password\" type=\"password\" class=\"validate\"/>\r\n           <label for=\"password\">Confirm Password</label>\r\n       </div>\r\n     </div>\r\n   </form>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nexport default class AlertCom extends React.Component{\r\n    render() {\r\n        const {variant, message}=this.props;\r\n        return(\r\n           <div>\r\n               { message != null ?\r\n                   <Alert variant={variant}>\r\n                       {message}\r\n                   </Alert>:\"\"\r\n               }\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport AlertCom from \"../AlertCom\";\r\nimport Spinner from 'react-spinkit';\r\nimport { Redirect } from 'react-router-dom';\r\nexport default class Login extends React.Component{\r\n\r\n  render(){\r\n    return (\r\n      <form class=\"col s12\">\r\n     <div class=\"row\">\r\n       <div class=\"input-field col s6\">\r\n         <input id=\"new_username\" type=\"text\" class=\"validate\"/>\r\n         <label for=\"username\">Username</label>\r\n       </div>\r\n     </div>\r\n     <div class=\"row\">\r\n       <div class=\"input-field col s6\">\r\n         <input id=\"new_password\" type=\"password\" class=\"validate\"/>\r\n           <label for=\"password\">Password</label>\r\n       </div>\r\n     </div>\r\n     <a class=\"waves-effect waves-light btn-small\">Login</a>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, HashRouter,Redirect  } from  'react-router-dom'\r\n\r\nimport Registration from \"./menu/Registration\";\r\nimport Login from \"./menu/Login\";\r\n\r\nexport default class Main extends React.Component{\r\n    render() {\r\n        return(\r\n            <HashRouter><main>\r\n                <div className=\"content\">\r\n                    <HashRouter>\r\n                        <Route path=\"/registration\" component={Registration}/>\r\n                        \r\n                            <Route path=\"/login\" component={Login}/>\r\n                    </HashRouter>\r\n                </div>\r\n                </main>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Sider from  './Sider'\nimport Main from \"./Main\";\n\nexport default class App extends React.Component{\n    render() {\n        return(\n            <div className=\"page\" >\n                <Sider/>\n                <Main/>\n            </div>\n        )\n    }\n }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}