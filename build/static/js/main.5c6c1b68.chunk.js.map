{"version":3,"sources":["Sider.jsx","AlertCom.jsx","menu/Event.jsx","menu/Status.jsx","Main.js","App.js","serviceWorker.js","index.js"],"names":["Sider","document","getElementById","style","display","window","location","href","subMenu","className","indexOf","url","localStorage","getItem","setItem","replace","id","onClick","this","closeLeftMenu","subMenuPresent","openLeftMenu","React","Component","AlertCom","props","variant","message","Alert","Event","state","otp","event","bind","handleChange","setState","match","params","eventId","axios","put","then","res","data","catch","error","undefined","response","status","e","target","value","Form","Group","controlId","toUpperCase","Control","onChange","type","placeholder","Button","Status","get","marginTop","Object","entries","map","t","k","fontWeight","color","Main","path","component","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c6c1b68.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Sider extends React.Component{\r\n    openLeftMenu() {\r\n        document.getElementById(\"leftMenu\").style.display = \"block\";\r\n        window.location.href =\"#\";\r\n    }\r\n\r\n     closeLeftMenu() {\r\n        document.getElementById(\"leftMenu\").style.display = \"none\";\r\n    }\r\n    subMenuPresent(){\r\n        let subMenu = document.getElementById(\"presentSubMenu\");\r\n        if(subMenu.className.indexOf(\"show\") === -1){\r\n            subMenu.className=\"show\";\r\n\r\n        }else{\r\n            subMenu.className=\"hide\";\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        let url = window.location.href;\r\n\r\n        if((url.indexOf(\"permission=admin@cs@event\") !== -1 || window.localStorage.getItem(\"permission\") === \"admin\")\r\n            && url.indexOf(\"permission=user\") === -1 ){\r\n            window.localStorage.setItem(\"permission\", \"admin\");\r\n        }else{\r\n            window.localStorage.setItem(\"permission\", \"user\");\r\n        }\r\n        if(url.indexOf(\"permission=admin@cs@event\") !== -1 )\r\n        window.location.href =  window.location.href.replace(\"permission=admin@cs@event\",\"\");\r\n\r\n        if(url.indexOf(\"permission=user\") !== -1 )\r\n            window.location.href =  window.location.href.replace(\"permission=user\",\"\");\r\n    }\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"w3-sidebar w3-bar-block w3-card w3-animate-left\" style={{display:\"none\"}} id=\"leftMenu\">\r\n                    <button id=\"closeButton\" onClick={this.closeLeftMenu} className=\"w3-bar-item w3-button w3-small\">Close &times;</button>\r\n                    <a onClick={this.closeLeftMenu} href=\"?#/event/registration\" className=\"w3-bar-item w3-button\">Registration</a>\r\n                    <a onClick={this.closeLeftMenu} href=\"?#/status\" className=\"w3-bar-item w3-button\">Status</a>\r\n                    { window.localStorage.getItem(\"permission\") === \"admin\" ?\r\n                        <div>\r\n                            <a onClick={this.subMenuPresent} href=\"#\" className=\"w3-bar-item w3-button\">Admin <i\r\n                                className=\"fa fa-caret-down\"></i></a>\r\n                            <div id=\"presentSubMenu\" className=\"hide\">\r\n                            <a onClick={this.closeLeftMenu} href=\"?#/event/admin_gift\" className=\"w3-bar-item w3-button\">Gift</a>\r\n                            <a onClick={this.closeLeftMenu} href=\"?#/event/admin_lunch\" className=\"w3-bar-item w3-button\">Lunch</a>\r\n                            </div>\r\n                        </div>:\"\"\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"w3-teal\">\r\n                    <button className=\"w3-button w3-teal w3-xlarge w3-left\" onClick={this.openLeftMenu}>&#9776;</button>\r\n                        <span className=\"headerTitle\">Pune Event App</span>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n    )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nexport default class AlertCom extends React.Component{\r\n    render() {\r\n        const {variant, message}=this.props;\r\n        return(\r\n           <div>\r\n               { message != null ?\r\n                   <Alert variant={variant}>\r\n                       {message}\r\n                   </Alert>:\"\"\r\n               }\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport axios from 'axios';\r\nimport AlertCom from \"../AlertCom\";\r\nexport default class Event extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            otp: null,\r\n            message:null,\r\n            variant:null,\r\n            event:\"\"\r\n        };\r\n        this.event = this.event.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentWillMount() {\r\n        this.setState({event : this.props.match.params.eventId.replace(\"admin_\",\"\")});\r\n    }\r\n\r\n\r\n    event(){\r\n\r\n        axios.put(\"https://cs-event-nov-2019.herokuapp.com/SpringBootRestApi/api/event\",\r\n            {\r\n            \"eventName\":this.state.event,\r\n            \"otp\":this.state.otp\r\n             })\r\n            .then(res => {\r\n\r\n                    this.setState({\r\n                        message:res.data,\r\n                        variant:\"success\"\r\n                    })\r\n\r\n\r\n            }).catch(error => {\r\n                if(error.response !== undefined && error.response.status === 400){\r\n                    this.setState({\r\n                        message:error.response.data,\r\n                        variant:\"warning\"\r\n                    })\r\n                }else {\r\n                    this.setState({\r\n                        message: \"ERROR:Registration failed, please contact to Admin\",\r\n                        variant: \"danger\"\r\n                    })\r\n                }\r\n\r\n        });\r\n\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n\r\n           <div className=\"menuDetails\">\r\n              <AlertCom variant={this.state.variant} message={this.state.message} />\r\n\r\n               <Form>\r\n                   <Form.Group controlId=\"formBasicOTP\">\r\n                       <h5 className=\"eventHeader\">{this.state.event.toUpperCase()+\" :\"}</h5>\r\n                       <Form.Control id=\"otp\" value={this.state.otp}\r\n                                     onChange={e => this.handleChange(e)} type=\"input\" placeholder={\"Enter OTP for \"+this.state.event} />\r\n                   </Form.Group>\r\n\r\n                   <Button onClick={this.event} variant=\"primary\" type=\"submit\">\r\n                       Register\r\n                   </Button>\r\n               </Form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport axios from 'axios';\r\nimport AlertCom from \"../AlertCom\";\r\nexport default class Status extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            otp: null,\r\n            data:null,\r\n            variant:null,\r\n            event:\"\"\r\n        };\r\n        this.event = this.event.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    event(){\r\n\r\n        axios.get(\"https://cs-event-nov-2019.herokuapp.com/SpringBootRestApi/api/data/otp/\"+this.state.otp)\r\n            .then(res => {\r\n\r\n                    this.setState({\r\n                        data:res.data,\r\n                        variant:\"success\"\r\n                    })\r\n\r\n\r\n            }).catch(error => {\r\n                if(error.response !== undefined && error.response.status === 400){\r\n                    this.setState({\r\n                        message:error.response.data,\r\n                        variant:\"warning\"\r\n                    })\r\n                }else {\r\n                    this.setState({\r\n                        message: \"ERROR:Registration failed, please contact to Admin\",\r\n                        variant: \"danger\"\r\n                    })\r\n                }\r\n\r\n        });\r\n\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n\r\n           <div className=\"menuDetails\">\r\n              <AlertCom variant={this.state.variant} message={this.state.message} />\r\n\r\n               <Form>\r\n                   <Form.Group id=\"formBasicOTP\">\r\n                       <h5 className=\"eventHeader\">{\"Status :\"}</h5>\r\n                       <Form.Control id=\"otp\" value={this.state.otp}\r\n                                     onChange={e => this.handleChange(e)} type=\"input\" placeholder={\"Enter OTP for Status\"} />\r\n                   </Form.Group>\r\n\r\n                   <Button onClick={this.event} variant=\"primary\" type=\"submit\">\r\n                       Status\r\n                   </Button>\r\n                   <ul style={{marginTop:\"12px\"}} className=\"b\">\r\n\r\n                       { this.state.data ? Object.entries(this.state.data).map((t,k) => <li><span style={{fontWeight:\"bold\",color:\"#9a9a9a\"}}>{t[0].toUpperCase() +\" : \"}</span>{+t[1]==null?\"\":t[1]}</li>) :\"\"}\r\n\r\n                   </ul>\r\n               </Form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, HashRouter} from  'react-router-dom'\r\n\r\nimport Event from \"./menu/Event\";\r\nimport Status from \"./menu/Status\";\r\n\r\n\r\nexport default class Main extends React.Component{\r\n    render() {\r\n        return(\r\n            <HashRouter><main>\r\n                <div className=\"content\">\r\n                    <HashRouter>\r\n                        <Route path=\"/event/:eventId\" component={Event}/>\r\n                        <Route path=\"/status\" component={Status}/>\r\n                    </HashRouter>\r\n                </div>\r\n            </main></HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Sider from  './Sider'\nimport Main from \"./Main\";\n\nexport default class App extends React.Component{\n    render() {\n        return(\n            <div className=\"page\" >\n                <Sider/>\n                <Main/>\n            </div>\n        )\n    }\n }\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}